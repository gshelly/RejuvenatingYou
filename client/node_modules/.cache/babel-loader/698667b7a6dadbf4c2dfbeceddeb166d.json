{"ast":null,"code":"var _jsxFileName = \"/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Avatar, Button, CssBaseline, TextField, Grid, Typography, makeStyles, Container, MenuItem } from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"white\",\n    margin: \"40px 150px 100px 0px\",\n    opacity: \"0.8\"\n  },\n  paper: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"black\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"#a01217\",\n      color: \"black\"\n    }\n  }\n}));\nconst activityLevelEnum = [{\n  value: \"noActivity\",\n  label: \"No Activity\"\n}, {\n  value: \"lightActivity\",\n  label: \"Light Activity\"\n}, {\n  value: \"moderateActivity\",\n  label: \"Moderate Activity\"\n}, {\n  value: \"heavyActivity\",\n  label: \"Heavy Activity\"\n}];\n\nfunction RegisterForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [height, setHeight] = useState();\n  const [weight, setWeight] = useState();\n  const [age, setAge] = useState();\n  const [activityLevel, setActivityLevel] = useState(\"\");\n  const [err, setErr] = useState({});\n  const [uniqueNameErr, setUniqueNameErr] = useState(\"\");\n  let history = useHistory();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setUniqueNameErr(\"\");\n    const postData = {\n      username: userName,\n      password: password,\n      confirmPassword: confirmPassword,\n      age: age,\n      initialWeight: weight,\n      height: height,\n      activityLevel: activityLevel\n    };\n\n    try {\n      let newUser = await axios.post(\"http://localhost:8000/api/users/register\", postData, {\n        withCredentials: true\n      });\n      props.setUser(newUser.data.username);\n      localStorage.setItem(\"userName\", newUser.data.username);\n      history.push(\"/main\");\n    } catch (err) {\n      console.log(err.response);\n\n      if (err.response.status === 402) {\n        setUniqueNameErr(err.response.data.message);\n        console.log(err.response.data.message);\n      } else {\n        console.log(err.response.data.errors);\n        setErr(err.response.data.errors);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"name\",\n                name: \"userName\",\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"userName\",\n                label: \"User Name\",\n                value: userName,\n                onChange: e => setUserName(e.target.value),\n                error: err.username ? true : uniqueNameErr ? true : false,\n                helperText: err.username ? err.username.message : uniqueNameErr ? uniqueNameErr : \"\",\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"current-password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                error: err.password ? true : false,\n                helperText: err.password ? err.password.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                name: \"confirm password\",\n                label: \"Confirm Password\",\n                type: \"password\",\n                id: \"confirm password\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value),\n                error: err.confirmPassword ? true : false,\n                helperText: err.confirmPassword ? err.confirmPassword.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"height\",\n                label: \"Height\",\n                name: \"height\",\n                placeholder: \"Enter your height in cm\",\n                autoComplete: \"height\",\n                value: height,\n                onChange: e => setHeight(e.target.value),\n                error: err.height ? true : false,\n                helperText: err.height ? err.height.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"weight\",\n                label: \"Weight\",\n                name: \"weight\",\n                placeholder: \"Enter your weight in pounds(lbs)\",\n                autoComplete: \"weight\",\n                value: weight,\n                onChange: e => setWeight(e.target.value),\n                error: err.initialWeight ? true : false,\n                helperText: err.initialWeight ? err.initialWeight.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                name: \"age\",\n                label: \"age\",\n                id: \"age\",\n                autoComplete: \"age\",\n                value: age,\n                onChange: e => setAge(e.target.value),\n                error: err.age ? true : false,\n                helperText: err.age ? err.age.message : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-select-currency\",\n                select: true,\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                label: \"activity level\",\n                value: activityLevel,\n                onChange: e => setActivityLevel(e.target.value),\n                error: err.activityLevel ? true : false,\n                helperText: err.activityLevel ? err.activityLevel.message : \"\",\n                children: activityLevelEnum.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            onClick: handleSubmit,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"x3tEhOnKe1hmfTRYa11b2VzWAr0=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/RegisterForm.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","Grid","Typography","makeStyles","Container","MenuItem","LockOutlinedIcon","axios","useHistory","useStyles","theme","root","backgroundColor","margin","opacity","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","palette","secondary","main","form","width","submit","color","activityLevelEnum","value","label","RegisterForm","props","classes","userName","setUserName","password","setPassword","confirmPassword","setConfirmPassword","height","setHeight","weight","setWeight","age","setAge","activityLevel","setActivityLevel","err","setErr","uniqueNameErr","setUniqueNameErr","history","handleSubmit","e","preventDefault","postData","username","initialWeight","newUser","post","withCredentials","setUser","data","localStorage","setItem","push","console","log","response","status","message","errors","target","map","option"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Typography,\n  makeStyles,\n  Container,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"white\",\n    margin: \"40px 150px 100px 0px\",\n    opacity: \"0.8\"\n  },\n  paper: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"black\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"#a01217\",\n      color: \"black\",\n    },\n  },\n}));\n\nconst activityLevelEnum = [\n  {\n    value: \"noActivity\",\n    label: \"No Activity\",\n  },\n  {\n    value: \"lightActivity\",\n    label: \"Light Activity\",\n  },\n  {\n    value: \"moderateActivity\",\n    label: \"Moderate Activity\",\n  },\n  {\n    value: \"heavyActivity\",\n    label: \"Heavy Activity\",\n  },\n];\n\nfunction RegisterForm(props) {\n  const classes = useStyles();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [height, setHeight] = useState();\n  const [weight, setWeight] = useState();\n  const [age, setAge] = useState();\n  const [activityLevel, setActivityLevel] = useState(\"\");\n  const [err, setErr] = useState({});\n  const [uniqueNameErr, setUniqueNameErr] = useState(\"\");\n  let history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setUniqueNameErr(\"\");\n    const postData = {\n      username: userName,\n      password: password,\n      confirmPassword: confirmPassword,\n      age: age,\n      initialWeight: weight,\n      height: height,\n      activityLevel: activityLevel,\n    };\n\n    try {\n      let newUser = await axios.post(\n        \"http://localhost:8000/api/users/register\",\n        postData,\n        {\n          withCredentials: true,\n        }\n      );\n      props.setUser(newUser.data.username);\n      localStorage.setItem(\"userName\", newUser.data.username);\n      history.push(\"/main\");\n    } catch (err) {\n      console.log(err.response);\n      if (err.response.status === 402) {\n        setUniqueNameErr(err.response.data.message);\n        console.log(err.response.data.message);\n      } else {\n        console.log(err.response.data.errors);\n        setErr(err.response.data.errors);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Container component=\"main\" maxWidth=\"xs\" className={classes.root}>\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"name\"\n                  name=\"userName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"userName\"\n                  label=\"User Name\"\n                  value={userName}\n                  onChange={(e) => setUserName(e.target.value)}\n                  error={err.username ? true : uniqueNameErr ? true : false}\n                  helperText={\n                    err.username\n                      ? err.username.message\n                      : uniqueNameErr\n                      ? uniqueNameErr\n                      : \"\"\n                  }\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  error={err.password ? true : false}\n                  helperText={err.password ? err.password.message : \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"confirm password\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  id=\"confirm password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  error={err.confirmPassword ? true : false}\n                  helperText={\n                    err.confirmPassword ? err.confirmPassword.message : \"\"\n                  }\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"height\"\n                  label=\"Height\"\n                  name=\"height\"\n                  placeholder=\"Enter your height in cm\"\n                  autoComplete=\"height\"\n                  value={height}\n                  onChange={(e) => setHeight(e.target.value)}\n                  error={err.height ? true : false}\n                  helperText={err.height ? err.height.message : \"\"}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"weight\"\n                  label=\"Weight\"\n                  name=\"weight\"\n                  placeholder=\"Enter your weight in pounds(lbs)\"\n                  autoComplete=\"weight\"\n                  value={weight}\n                  onChange={(e) => setWeight(e.target.value)}\n                  error={err.initialWeight ? true : false}\n                  helperText={\n                    err.initialWeight ? err.initialWeight.message : \"\"\n                  }\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"age\"\n                  label=\"age\"\n                  id=\"age\"\n                  autoComplete=\"age\"\n                  value={age}\n                  onChange={(e) => setAge(e.target.value)}\n                  error={err.age ? true : false}\n                  helperText={err.age ? err.age.message : \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"outlined-select-currency\"\n                  select\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  label=\"activity level\"\n                  value={activityLevel}\n                  onChange={(e) => setActivityLevel(e.target.value)}\n                  error={err.activityLevel ? true : false}\n                  helperText={\n                    err.activityLevel ? err.activityLevel.message : \"\"\n                  }\n                >\n                  {activityLevelEnum.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleSubmit}\n            >\n              Sign Up\n            </Button>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}