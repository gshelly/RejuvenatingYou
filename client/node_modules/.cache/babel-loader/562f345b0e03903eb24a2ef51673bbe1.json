{"ast":null,"code":"import React from\"react\";import{Doughnut}from\"react-chartjs-2\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ChartPie(props){var foodData=props.foodData,weights=props.weights,activityLevel=props.activityLevel,age=props.age,height=props.height,initialWeight=props.initialWeight;var calculateFat=function calculateFat(){var totalFat=0;foodData&&foodData.breakfast&&foodData.breakfast.forEach(function(food){totalFat+=food.food_id.fat*food.quantity;});foodData&&foodData.lunch&&foodData.lunch.forEach(function(food){totalFat+=food.food_id.fat*food.quantity;});foodData&&foodData.dinner&&foodData.dinner.forEach(function(food){totalFat+=food.food_id.fat*food.quantity;});return totalFat*9;};var calculateCarb=function calculateCarb(){var totalCarb=0;foodData&&foodData.breakfast&&foodData.breakfast.forEach(function(food){totalCarb+=food.food_id.carb*food.quantity;});foodData&&foodData.lunch&&foodData.lunch.forEach(function(food){totalCarb+=food.food_id.carb*food.quantity;});foodData&&foodData.dinner&&foodData.dinner.forEach(function(food){totalCarb+=food.food_id.carb*food.quantity;});return totalCarb*4;};var calculateProtein=function calculateProtein(){var totalProtein=0;foodData&&foodData.breakfast&&foodData.breakfast.forEach(function(food){totalProtein+=food.food_id.protein*food.quantity;});foodData&&foodData.lunch&&foodData.lunch.forEach(function(food){totalProtein+=food.food_id.protein*food.quantity;});foodData&&foodData.dinner&&foodData.dinner.forEach(function(food){totalProtein+=food.food_id.protein*food.quantity;});return totalProtein*4;};var totalCalorie=function totalCalorie(){var activityRatio=0;var weightForCalc=0;if(!weights[weights.length-1]){weightForCalc=initialWeight;}else{weightForCalc=weights[weights.length-1];}if(activityLevel===\"noActivity\")activityRatio=1.2;if(activityLevel===\"lightActivity\")activityRatio=1.375;if(activityLevel===\"moderateActivity\")activityRatio=1.55;if(activityLevel===\"heavyActivity\")activityRatio=1.725;var BMR=66+6.3*weightForCalc+12.9*(height/2.54)-6.8*age;var total=Math.floor(BMR*activityRatio);var fat=calculateFat();var protein=calculateProtein();var carb=calculateCarb();total=total-fat-protein-carb;if(total<0){return 0;}return total;};var data={labels:[\"Calories Left\",\"Fat\",\"Protein\",\"Carb\"],datasets:[{label:\"My First Dataset\",data:[totalCalorie(),calculateFat(),calculateProtein(),calculateCarb()],backgroundColor:[\"rgb(255, 99, 132)\",\"rgb(54, 162, 235)\",\"rgb(50,205,50)\",\"rgb(255, 205, 86)\"],hoverOffset:4}]};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Doughnut,{data:data})});}export default ChartPie;","map":{"version":3,"sources":["/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/ChartPie.js"],"names":["React","Doughnut","ChartPie","props","foodData","weights","activityLevel","age","height","initialWeight","calculateFat","totalFat","breakfast","forEach","food","food_id","fat","quantity","lunch","dinner","calculateCarb","totalCarb","carb","calculateProtein","totalProtein","protein","totalCalorie","activityRatio","weightForCalc","length","BMR","total","Math","floor","data","labels","datasets","label","backgroundColor","hoverOffset"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nfunction ChartPie(props) {\n  const { foodData, weights, activityLevel, age, height, initialWeight } =\n    props;\n\n  const calculateFat = () => {\n    let totalFat = 0;\n    foodData &&\n      foodData.breakfast &&\n      foodData.breakfast.forEach((food) => {\n        totalFat += food.food_id.fat * food.quantity;\n      });\n\n    foodData &&\n      foodData.lunch &&\n      foodData.lunch.forEach((food) => {\n        totalFat += food.food_id.fat * food.quantity;\n      });\n    foodData &&\n      foodData.dinner &&\n      foodData.dinner.forEach((food) => {\n        totalFat += food.food_id.fat * food.quantity;\n      });\n\n    return totalFat * 9;\n  };\n\n  const calculateCarb = () => {\n    let totalCarb = 0;\n    foodData &&\n      foodData.breakfast &&\n      foodData.breakfast.forEach((food) => {\n        totalCarb += food.food_id.carb * food.quantity;\n      });\n    foodData &&\n      foodData.lunch &&\n      foodData.lunch.forEach((food) => {\n        totalCarb += food.food_id.carb * food.quantity;\n      });\n    foodData &&\n      foodData.dinner &&\n      foodData.dinner.forEach((food) => {\n        totalCarb += food.food_id.carb * food.quantity;\n      });\n    return totalCarb * 4;\n  };\n\n  const calculateProtein = () => {\n    let totalProtein = 0;\n    foodData &&\n      foodData.breakfast &&\n      foodData.breakfast.forEach((food) => {\n        totalProtein += food.food_id.protein * food.quantity;\n      });\n    foodData &&\n      foodData.lunch &&\n      foodData.lunch.forEach((food) => {\n        totalProtein += food.food_id.protein * food.quantity;\n      });\n    foodData &&\n      foodData.dinner &&\n      foodData.dinner.forEach((food) => {\n        totalProtein += food.food_id.protein * food.quantity;\n      });\n    return totalProtein * 4;\n  };\n\n  const totalCalorie = () => {\n    let activityRatio = 0;\n    let weightForCalc = 0;\n    if (!weights[weights.length - 1]) {\n      weightForCalc = initialWeight;\n    } else {\n      weightForCalc = weights[weights.length - 1];\n    }\n    if (activityLevel === \"noActivity\") activityRatio = 1.2;\n    if (activityLevel === \"lightActivity\") activityRatio = 1.375;\n    if (activityLevel === \"moderateActivity\") activityRatio = 1.55;\n    if (activityLevel === \"heavyActivity\") activityRatio = 1.725;\n    let BMR = 66 + 6.3 * weightForCalc + 12.9 * (height / 2.54) - 6.8 * age;\n    let total = Math.floor(BMR * activityRatio);\n    const fat = calculateFat();\n    const protein = calculateProtein();\n    const carb = calculateCarb();\n    total = total - fat - protein - carb;\n    if (total < 0) {\n      return 0;\n    }\n    return total;\n  };\n\n  const data = {\n    labels: [\"Calories Left\", \"Fat\", \"Protein\", \"Carb\"],\n    datasets: [\n      {\n        label: \"My First Dataset\",\n        data: [\n          totalCalorie(),\n          calculateFat(),\n          calculateProtein(),\n          calculateCarb(),\n        ],\n        backgroundColor: [\n          \"rgb(255, 99, 132)\",\n          \"rgb(54, 162, 235)\",\n          \"rgb(50,205,50)\",\n          \"rgb(255, 205, 86)\",\n        ],\n        hoverOffset: 4,\n      },\n    ],\n  };\n  return (\n    <>\n      <Doughnut data={data} />\n    </>\n  );\n}\n\nexport default ChartPie;\n"]},"metadata":{},"sourceType":"module"}