{"ast":null,"code":"var _jsxFileName = \"/Users/shellygupta/Desktop/Algorithms/Group/client/src/views/AddFood/AddFood.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport FoodForm from \"../../components/FoodForm\";\nimport \"./styles.css\";\nimport DisplayFood from \"../../components/DisplayFood\";\nimport EditFood from \"../../components/EditFood\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddFood(props) {\n  _s();\n\n  const [dummy, setDummy] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [editFood, setEditFood] = useState({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"backImage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"50%\",\n        margin: \"0px auto\",\n        paddingTop: \"40px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(FoodForm, {\n        setDummy: setDummy,\n        dummy: dummy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DisplayFood, {\n        setDummy: setDummy,\n        dummy: dummy,\n        setIsEdit: setIsEdit,\n        setEditFood: setEditFood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), isEdit ? /*#__PURE__*/_jsxDEV(EditFood, {\n        open: isEdit,\n        setIsEdit: setIsEdit,\n        existingFood: editFood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this) : false]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddFood, \"JkRCI/IMCIxmzwptqWSQcOt9Lio=\");\n\n_c = AddFood;\nexport default AddFood;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFood\");","map":{"version":3,"sources":["/Users/shellygupta/Desktop/Algorithms/Group/client/src/views/AddFood/AddFood.js"],"names":["React","useState","FoodForm","DisplayFood","EditFood","AddFood","props","dummy","setDummy","isEdit","setIsEdit","editFood","setEditFood","width","margin","paddingTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAO,cAAP;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEY,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,MAAM,EAAE,UAAxB;AAAoCC,QAAAA,UAAU,EAAE;AAAhD,OAAZ;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEP,QAApB;AAA8B,QAAA,KAAK,EAAED;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,QAAQ,EAAEC,QADZ;AAEE,QAAA,KAAK,EAAED,KAFT;AAGE,QAAA,SAAS,EAAEG,SAHb;AAIE,QAAA,WAAW,EAAEE;AAJf;AAAA;AAAA;AAAA;AAAA,cADF,EAOGH,MAAM,gBACL,QAAC,QAAD;AACE,QAAA,IAAI,EAAEA,MADR;AAEE,QAAA,SAAS,EAAEC,SAFb;AAGE,QAAA,YAAY,EAAEC;AAHhB;AAAA;AAAA;AAAA;AAAA,cADK,GAOL,KAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA7BQN,O;;KAAAA,O;AA+BT,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport FoodForm from \"../../components/FoodForm\";\nimport \"./styles.css\";\nimport DisplayFood from \"../../components/DisplayFood\";\nimport EditFood from \"../../components/EditFood\";\n\nfunction AddFood(props) {\n  const [dummy, setDummy] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [editFood, setEditFood] = useState({});\n\n  return (\n    <div id=\"backImage\">\n      <div style={{ width: \"50%\", margin: \"0px auto\", paddingTop: \"40px\" }}>\n        <FoodForm setDummy={setDummy} dummy={dummy} />\n      </div>\n      <div>\n        <DisplayFood\n          setDummy={setDummy}\n          dummy={dummy}\n          setIsEdit={setIsEdit}\n          setEditFood={setEditFood}\n        />\n        {isEdit ? (\n          <EditFood\n            open={isEdit}\n            setIsEdit={setIsEdit}\n            existingFood={editFood}\n          />\n        ) : (\n          false\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default AddFood;\n"]},"metadata":{},"sourceType":"module"}