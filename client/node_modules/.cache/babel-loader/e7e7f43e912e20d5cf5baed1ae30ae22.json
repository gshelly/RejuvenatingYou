{"ast":null,"code":"import _slicedToArray from\"/Users/shellygupta/Desktop/Algorithms/Group/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Paper,Button,TextField,Grid,makeStyles}from\"@material-ui/core\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{paper:{marginTop:theme.spacing(0),display:\"flex\",flexDirection:\"column\",alignItems:\"center\",width:\"100%\",border:\"2px solid #d09c9e\"},form:{margin:\"20px 20px\"},submit:{margin:theme.spacing(3,0,2),backgroundColor:\"#e4d882\",color:\"black\",\"&:hover\":{backgroundColor:\"#a882e4\",color:\"#black\"}}};});function FoodForm(props){var classes=useStyles();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),foodName=_useState2[0],setFoodName=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),fat=_useState4[0],setFat=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),protein=_useState6[0],setProtein=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),carbs=_useState8[0],setCarbs=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),err=_useState10[0],setErr=_useState10[1];var userId=localStorage.getItem(\"userId\");var setIsEdit=props.setIsEdit,existingFood=props.existingFood;useEffect(function(){if(setIsEdit){setFoodName(existingFood.name);setFat(existingFood.fat);setProtein(existingFood.protein);setCarbs(existingFood.carb);}},[existingFood,setIsEdit]);var handleAddFood=function handleAddFood(e){e.preventDefault();axios.post(\"http://localhost:8000/api/foods/create\",{name:foodName,protein:protein,fat:fat,carb:carbs,user_id:userId},{withCredentials:true}).then(function(response){console.log(response.data);setCarbs(\"\");setFat(\"\");setFoodName(\"\");setProtein(\"\");setErr(\"\");props.setDummy(!props.dummy);}).catch(function(err){console.log(\"errors\",err.response.data.errors);setErr(err.response.data.errors);setCarbs(\"\");});};var handleEditFood=function handleEditFood(e){axios.put(\"http://localhost:8000/api/foods/update/\"+existingFood._id,{name:foodName,protein:protein,fat:fat,carb:carbs// user_id: userId\n},{withCredentials:true}).then(function(response){console.log(response);props.setOpen(false);}).catch(function(err){console.log(err);});};return/*#__PURE__*/_jsx(Paper,{elevation:3,className:classes.paper,children:/*#__PURE__*/_jsx(\"form\",{className:classes.form,noValidate:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{autoComplete:\"food name\",name:\"foodName\",variant:\"outlined\",required:true,fullWidth:true,id:\"foodName\",label:\"Food Name\",value:foodName,onChange:function onChange(e){return setFoodName(e.target.value);},error:err.name?true:false,helperText:err.name?err.name.message:\"\",autoFocus:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(TextField,{autoComplete:\"fat\",name:\"fat\",variant:\"outlined\",required:true,fullWidth:true,id:\"fat\",label:\"Enter Fat in Grams\",value:fat,onChange:function onChange(e){return setFat(e.target.value);},error:err.fat?true:false,helperText:err.fat?err.fat.message:\"\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(TextField,{autoComplete:\"protein\",name:\"protein\",variant:\"outlined\",required:true,fullWidth:true,id:\"protein\",label:\"Enter Protein in Grams\",value:protein,onChange:function onChange(e){return setProtein(e.target.value);},error:err.protein?true:false,helperText:err.protein?err.protein.message:\"\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(TextField,{autoComplete:\"carbs\",name:\"carbs\",variant:\"outlined\",required:true,fullWidth:true,id:\"carbs\",label:\"Enter Carbs in Grams\",value:carbs,onChange:function onChange(e){return setCarbs(e.target.value);},error:err.carb?true:false,helperText:err.carb?err.carb.message:\"\"})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"primary\",className:classes.submit,onClick:setIsEdit?handleEditFood:handleAddFood,children:setIsEdit?\"UPDATE FOOD\":\"ADD FOOD\"})]})})});}export default FoodForm;","map":{"version":3,"sources":["/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/FoodForm.js"],"names":["React","useState","useEffect","Paper","Button","TextField","Grid","makeStyles","axios","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","width","border","form","margin","submit","backgroundColor","color","FoodForm","props","classes","foodName","setFoodName","fat","setFat","protein","setProtein","carbs","setCarbs","err","setErr","userId","localStorage","getItem","setIsEdit","existingFood","name","carb","handleAddFood","e","preventDefault","post","user_id","withCredentials","then","response","console","log","data","setDummy","dummy","catch","errors","handleEditFood","put","_id","setOpen","target","value","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Paper, Button, TextField, Grid, makeStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(0),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    border: \"2px solid #d09c9e\",\n  },\n\n  form: {\n    margin: \"20px 20px\",\n  },\n\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"#e4d882\",\n    color: \"black\",\n    \"&:hover\": {\n      backgroundColor: \"#a882e4\",\n      color: \"#black\",\n    },\n  },\n}));\n\nfunction FoodForm(props) {\n  const classes = useStyles();\n  const [foodName, setFoodName] = useState(\"\");\n  const [fat, setFat] = useState();\n  const [protein, setProtein] = useState();\n  const [carbs, setCarbs] = useState();\n  const [err, setErr] = useState({});\n  const userId = localStorage.getItem(\"userId\");\n  const { setIsEdit, existingFood } = props;\n\n  useEffect(() => {\n    if (setIsEdit) {\n      setFoodName(existingFood.name);\n      setFat(existingFood.fat);\n      setProtein(existingFood.protein);\n      setCarbs(existingFood.carb);\n    }\n  }, [existingFood, setIsEdit]);\n\n  const handleAddFood = (e) => {\n    e.preventDefault();\n    axios\n      .post(\n        \"http://localhost:8000/api/foods/create\",\n        {\n          name: foodName,\n          protein: protein,\n          fat: fat,\n          carb: carbs,\n          user_id: userId,\n        },\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response.data);\n        setCarbs(\"\");\n        setFat(\"\");\n        setFoodName(\"\");\n        setProtein(\"\");\n        setErr(\"\");\n        props.setDummy(!props.dummy);\n      })\n      .catch((err) => {\n        console.log(\"errors\", err.response.data.errors);\n        setErr(err.response.data.errors);\n        setCarbs(\"\");\n      });\n  };\n\n  const handleEditFood = (e) => {\n    axios\n      .put(\n        \"http://localhost:8000/api/foods/update/\" + existingFood._id,\n        {\n          name: foodName,\n          protein: protein,\n          fat: fat,\n          carb: carbs,\n          // user_id: userId\n        },\n        {\n          withCredentials: true,\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        props.setOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Paper elevation={3} className={classes.paper}>\n      <form className={classes.form} noValidate>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              autoComplete=\"food name\"\n              name=\"foodName\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"foodName\"\n              label=\"Food Name\"\n              value={foodName}\n              onChange={(e) => setFoodName(e.target.value)}\n              error={err.name ? true : false}\n              helperText={err.name ? err.name.message : \"\"}\n              autoFocus\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              autoComplete=\"fat\"\n              name=\"fat\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"fat\"\n              label=\"Enter Fat in Grams\"\n              value={fat}\n              onChange={(e) => setFat(e.target.value)}\n              error={err.fat ? true : false}\n              helperText={err.fat ? err.fat.message : \"\"}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              autoComplete=\"protein\"\n              name=\"protein\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"protein\"\n              label=\"Enter Protein in Grams\"\n              value={protein}\n              onChange={(e) => setProtein(e.target.value)}\n              error={err.protein ? true : false}\n              helperText={err.protein ? err.protein.message : \"\"}\n            />\n          </Grid>\n\n          <Grid item xs={4}>\n            <TextField\n              autoComplete=\"carbs\"\n              name=\"carbs\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"carbs\"\n              label=\"Enter Carbs in Grams\"\n              value={carbs}\n              onChange={(e) => setCarbs(e.target.value)}\n              error={err.carb ? true : false}\n              helperText={err.carb ? err.carb.message : \"\"}\n            />\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={setIsEdit ? handleEditFood : handleAddFood}\n          >\n            {setIsEdit ? \"UPDATE FOOD\" : \"ADD FOOD\"}\n          </Button>\n        </Grid>\n      </form>\n    </Paper>\n  );\n}\n\nexport default FoodForm;\n"]},"metadata":{},"sourceType":"module"}