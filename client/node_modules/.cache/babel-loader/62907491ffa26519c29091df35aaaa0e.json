{"ast":null,"code":"var _jsxFileName = \"/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/FoodForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Paper, Button, TextField, Grid, makeStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(0),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    border: \"1px solid black\"\n  },\n  form: {\n    margin: \"20px 20px\"\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"#e4d882\",\n    color: \"black\",\n    '&:hover': {\n      backgroundColor: '#a882e4',\n      color: '#black'\n    }\n  }\n}));\n\nfunction FoodForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const [foodName, setFoodName] = useState(\"\");\n  const [fat, setFat] = useState();\n  const [protein, setProtein] = useState();\n  const [carbs, setCarbs] = useState();\n  const [err, setErr] = useState({});\n  const userId = localStorage.getItem(\"userId\");\n  const {\n    setIsEdit,\n    existingFood\n  } = props;\n  useEffect(() => {\n    if (setIsEdit) {\n      setFoodName(existingFood.name);\n      setFat(existingFood.fat);\n      setProtein(existingFood.protein);\n      setCarbs(existingFood.carb);\n    }\n  }, [existingFood, setIsEdit]);\n\n  const handleAddFood = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8000/api/foods/create\", {\n      name: foodName,\n      protein: protein,\n      fat: fat,\n      carb: carbs,\n      user_id: userId\n    }, {\n      withCredentials: true\n    }).then(response => {\n      console.log(response.data);\n      setCarbs(\"\");\n      setFat(\"\");\n      setFoodName(\"\");\n      setProtein(\"\");\n      setErr(\"\");\n      props.setDummy(!props.dummy);\n    }).catch(err => {\n      console.log(\"errors\", err.response.data.errors);\n      setErr(err.response.data.errors);\n      setCarbs(\"\");\n    });\n  };\n\n  const handleEditFood = e => {\n    axios.put(\"http://localhost:8000/api/foods/update/\" + existingFood._id, {\n      name: foodName,\n      protein: protein,\n      fat: fat,\n      carb: carbs,\n      user_id: userId\n    }, {\n      withCredentials: true\n    }).then(response => {\n      console.log(response);\n      props.setOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"food name\",\n            name: \"foodName\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"foodName\",\n            label: \"Food Name\",\n            value: foodName,\n            onChange: e => setFoodName(e.target.value),\n            error: err.name ? true : false,\n            helperText: err.name ? err.name.message : \"\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"fat\",\n            name: \"fat\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"fat\",\n            label: \"Enter Fat in Grams\",\n            value: fat,\n            onChange: e => setFat(e.target.value),\n            error: err.fat ? true : false,\n            helperText: err.fat ? err.fat.message : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"protein\",\n            name: \"protein\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"protein\",\n            label: \"Enter Protein in Grams\",\n            value: protein,\n            onChange: e => setProtein(e.target.value),\n            error: err.protein ? true : false,\n            helperText: err.protein ? err.protein.message : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"carbs\",\n            name: \"carbs\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"carbs\",\n            label: \"Enter Carbs in Grams\",\n            value: carbs,\n            onChange: e => setCarbs(e.target.value),\n            error: err.carb ? true : false,\n            helperText: err.carb ? err.carb.message : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          onClick: setIsEdit ? handleEditFood : handleAddFood,\n          children: setIsEdit ? \"UPDATE FOOD\" : \"ADD FOOD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodForm, \"SBWRF3e3m+BZsoQtXepWxavx3uo=\", false, function () {\n  return [useStyles];\n});\n\n_c = FoodForm;\nexport default FoodForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodForm\");","map":{"version":3,"sources":["/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/FoodForm.js"],"names":["React","useState","useEffect","Paper","Button","TextField","Grid","makeStyles","axios","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","width","border","form","margin","submit","backgroundColor","color","FoodForm","props","classes","foodName","setFoodName","fat","setFat","protein","setProtein","carbs","setCarbs","err","setErr","userId","localStorage","getItem","setIsEdit","existingFood","name","carb","handleAddFood","e","preventDefault","post","user_id","withCredentials","then","response","console","log","data","setDummy","dummy","catch","errors","handleEditFood","put","_id","setOpen","target","value","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Paper,\n  Button,\n  TextField,\n  Grid,\n  makeStyles,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(0),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n    border: \"1px solid black\"\n  },\n\n  form: {\n    margin: \"20px 20px\",\n  },\n\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"#e4d882\",\n    color: \"black\",\n    '&:hover': {\n      backgroundColor: '#a882e4',\n      color: '#black',\n    },\n  },\n}));\n\nfunction FoodForm(props) {\n  const classes = useStyles();\n  const [foodName, setFoodName] = useState(\"\");\n  const [fat, setFat] = useState();\n  const [protein, setProtein] = useState();\n  const [carbs, setCarbs] = useState();\n  const [err, setErr] = useState({});\n  const userId = localStorage.getItem(\"userId\")\n  const { setIsEdit, existingFood } = props\n\n  useEffect(() => {\n    if (setIsEdit) {\n      setFoodName(existingFood.name)\n      setFat(existingFood.fat)\n      setProtein(existingFood.protein)\n      setCarbs(existingFood.carb)\n    }\n  }, [existingFood, setIsEdit])\n\n\n  const handleAddFood = (e) => {\n\n    e.preventDefault();\n    axios\n      .post(\"http://localhost:8000/api/foods/create\", {\n        name: foodName,\n        protein: protein,\n        fat: fat,\n        carb: carbs,\n        user_id: userId\n      }, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response.data);\n        setCarbs(\"\")\n        setFat(\"\")\n        setFoodName(\"\")\n        setProtein(\"\")\n        setErr(\"\")\n        props.setDummy(!props.dummy)\n      })\n      .catch((err) => {\n        console.log(\"errors\", err.response.data.errors);\n        setErr(err.response.data.errors)\n        setCarbs(\"\")\n      });\n  }\n\n  const handleEditFood = (e) => {\n    axios\n      .put(\"http://localhost:8000/api/foods/update/\" + existingFood._id, {\n        name: foodName,\n        protein: protein,\n        fat: fat,\n        carb: carbs,\n        user_id: userId\n      }, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(response);\n        props.setOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n\n  return (\n    <Paper elevation={3} className={classes.paper}>\n      <form className={classes.form} noValidate>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              autoComplete=\"food name\"\n              name=\"foodName\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"foodName\"\n              label=\"Food Name\"\n              value={foodName}\n              onChange={(e) => setFoodName(e.target.value)}\n              error={err.name ? true : false}\n              helperText={err.name ? err.name.message : \"\"}\n              autoFocus\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              autoComplete=\"fat\"\n              name=\"fat\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"fat\"\n              label=\"Enter Fat in Grams\"\n              value={fat}\n              onChange={(e) => setFat(e.target.value)}\n              error={err.fat ? true : false}\n              helperText={err.fat ? err.fat.message : \"\"}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              autoComplete=\"protein\"\n              name=\"protein\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"protein\"\n              label=\"Enter Protein in Grams\"\n              value={protein}\n              onChange={(e) => setProtein(e.target.value)}\n              error={err.protein ? true : false}\n              helperText={err.protein ? err.protein.message : \"\"}\n            />\n          </Grid>\n\n          <Grid item xs={4}>\n            <TextField\n              autoComplete=\"carbs\"\n              name=\"carbs\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"carbs\"\n              label=\"Enter Carbs in Grams\"\n              value={carbs}\n              onChange={(e) => setCarbs(e.target.value)}\n              error={err.carb ? true : false}\n              helperText={err.carb ? err.carb.message : \"\"}\n            />\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={setIsEdit ? handleEditFood : handleAddFood}\n          >\n            {setIsEdit ? \"UPDATE FOOD\" : \"ADD FOOD\"}\n          </Button>\n        </Grid>\n      </form>\n    </Paper>\n  );\n}\n\nexport default FoodForm;\n\n"]},"metadata":{},"sourceType":"module"}