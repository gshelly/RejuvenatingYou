{"ast":null,"code":"import React,{useState}from\"react\";import Accordion from\"@mui/material/Accordion\";import AccordionSummary from\"@mui/material/AccordionSummary\";import AccordionDetails from\"@mui/material/AccordionDetails\";import Typography from\"@mui/material/Typography\";import ExpandMoreIcon from\"@mui/icons-material/ExpandMore\";import Table from\"@mui/material/Table\";import TableBody from\"@mui/material/TableBody\";import TableCell from\"@mui/material/TableCell\";import TableHead from\"@mui/material/TableHead\";import TableRow from\"@mui/material/TableRow\";import{makeStyles}from\"@mui/styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AccordionTable=function AccordionTable(props){var foodData=props.foodData;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),\"aria-controls\":\"panel1a-content\",id:\"panel1a-header\",children:/*#__PURE__*/_jsx(Typography,{children:\"Breakfast\"})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(Typography,{children:/*#__PURE__*/_jsxs(Table,{sx:{minWidth:650},\"aria-label\":\"simple table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Breakfast\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Calories\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Fat(g)\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Carbs(g)\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Protein(g)\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:foodData[foodData.length-1]&&foodData[foodData.length-1].breakfast.map(function(food,index){return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:food.name}),/*#__PURE__*/_jsx(TableCell,{children:food.fat*9+(food.carb+food.protein)*4}),/*#__PURE__*/_jsx(TableCell,{children:food.fat}),/*#__PURE__*/_jsx(TableCell,{children:food.carb}),/*#__PURE__*/_jsx(TableCell,{children:food.protein})]},\"breakfast\"+index);})})]})})})]}),/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),\"aria-controls\":\"panel2a-content\",id:\"panel2a-header\",children:/*#__PURE__*/_jsx(Typography,{children:\"Lunch\"})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(Typography,{children:/*#__PURE__*/_jsxs(Table,{sx:{minWidth:650},\"aria-label\":\"simple table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Lunch\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Calories\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Fat(g)\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Carbs(g)\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Protein(g)\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:foodData[foodData.length-1]&&foodData[foodData.length-1].lunch.map(function(food,index){return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:food.name}),/*#__PURE__*/_jsx(TableCell,{children:food.fat*9+(food.carb+food.protein)*4}),/*#__PURE__*/_jsx(TableCell,{children:food.fat}),/*#__PURE__*/_jsx(TableCell,{children:food.carb}),/*#__PURE__*/_jsx(TableCell,{children:food.protein})]},\"lunch\"+index);})})]})})})]}),/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),\"aria-controls\":\"panel2a-content\",id:\"panel2a-header\",children:/*#__PURE__*/_jsx(Typography,{children:\"Dinner\"})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(Typography,{children:/*#__PURE__*/_jsxs(Table,{sx:{minWidth:650},\"aria-label\":\"simple table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Lunch\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Calories\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Fat(g)\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Carbs(g)\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Protein(g)\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:foodData[foodData.length-1]&&foodData[foodData.length-1].dinner.map(function(food,index){return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:food.name}),/*#__PURE__*/_jsx(TableCell,{children:food.fat*9+(food.carb+food.protein)*4}),/*#__PURE__*/_jsx(TableCell,{children:food.fat}),/*#__PURE__*/_jsx(TableCell,{children:food.carb}),/*#__PURE__*/_jsx(TableCell,{children:food.protein})]},\"dinner\"+index);})})]})})})]})]});};export default AccordionTable;","map":{"version":3,"sources":["/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/AccordionTable.js"],"names":["React","useState","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","Table","TableBody","TableCell","TableHead","TableRow","makeStyles","AccordionTable","props","foodData","minWidth","length","breakfast","map","food","index","name","fat","carb","protein","lunch","dinner"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst AccordionTable = (props) => {\n  const { foodData } = props;\n\n  return (\n    <>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>Breakfast</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Breakfast</TableCell>\n                  <TableCell align=\"right\">Calories</TableCell>\n                  <TableCell align=\"right\">Fat(g)</TableCell>\n                  <TableCell align=\"right\">Carbs(g)</TableCell>\n                  <TableCell align=\"right\">Protein(g)</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {foodData[foodData.length - 1] &&\n                  foodData[foodData.length - 1].breakfast.map((food, index) => {\n                    return (\n                      <TableRow key={\"breakfast\" + index}>\n                        <TableCell>{food.name}</TableCell>\n                        <TableCell>\n                          {food.fat * 9 + (food.carb + food.protein) * 4}\n                        </TableCell>\n                        <TableCell>{food.fat}</TableCell>\n                        <TableCell>{food.carb}</TableCell>\n                        <TableCell>{food.protein}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography>Lunch</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Lunch</TableCell>\n                  <TableCell align=\"right\">Calories</TableCell>\n                  <TableCell align=\"right\">Fat(g)</TableCell>\n                  <TableCell align=\"right\">Carbs(g)</TableCell>\n                  <TableCell align=\"right\">Protein(g)</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {foodData[foodData.length - 1] &&\n                  foodData[foodData.length - 1].lunch.map((food, index) => {\n                    return (\n                      <TableRow key={\"lunch\" + index}>\n                        <TableCell>{food.name}</TableCell>\n                        <TableCell>\n                          {food.fat * 9 + (food.carb + food.protein) * 4}\n                        </TableCell>\n                        <TableCell>{food.fat}</TableCell>\n                        <TableCell>{food.carb}</TableCell>\n                        <TableCell>{food.protein}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography>Dinner</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Lunch</TableCell>\n                  <TableCell align=\"right\">Calories</TableCell>\n                  <TableCell align=\"right\">Fat(g)</TableCell>\n                  <TableCell align=\"right\">Carbs(g)</TableCell>\n                  <TableCell align=\"right\">Protein(g)</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {foodData[foodData.length - 1] &&\n                  foodData[foodData.length - 1].dinner.map((food, index) => {\n                    return (\n                      <TableRow key={\"dinner\" + index}>\n                        <TableCell>{food.name}</TableCell>\n                        <TableCell>\n                          {food.fat * 9 + (food.carb + food.protein) * 4}\n                        </TableCell>\n                        <TableCell>{food.fat}</TableCell>\n                        <TableCell>{food.carb}</TableCell>\n                        <TableCell>{food.protein}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n    </>\n  );\n};\n\nexport default AccordionTable;\n"]},"metadata":{},"sourceType":"module"}