[{"/Users/shellygupta/Desktop/Algorithms/Group/client/src/index.js":"1","/Users/shellygupta/Desktop/Algorithms/Group/client/src/App.js":"2","/Users/shellygupta/Desktop/Algorithms/Group/client/src/views/Main.js":"3","/Users/shellygupta/Desktop/Algorithms/Group/client/src/views/AddFood/AddFood.js":"4","/Users/shellygupta/Desktop/Algorithms/Group/client/src/views/LoginRegister.js":"5","/Users/shellygupta/Desktop/Algorithms/Group/client/src/utils/Navbar/Navbar.js":"6","/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/DisplayFood.js":"7","/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/ChartPie.js":"8","/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/AccordionTable.js":"9","/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/RegisterForm.js":"10","/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/BarChart.js":"11","/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/LoginForm.js":"12","/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/EditFood.js":"13","/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/FoodForm.js":"14","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/index.js":"15","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/App.js":"16","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/views/Main.js":"17","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/views/LoginRegister.js":"18","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/views/AddFood/AddFood.js":"19","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/utils/Navbar/Navbar.js":"20","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/LoginForm.js":"21","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/DisplayFood.js":"22","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/FoodForm.js":"23","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/EditFood.js":"24","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/ChartPie.js":"25","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/BarChart.js":"26","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/AccordionTable.js":"27","/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/RegisterForm.js":"28"},{"size":358,"mtime":1632197560150,"results":"29","hashOfConfig":"30"},{"size":1160,"mtime":1632288377655,"results":"31","hashOfConfig":"30"},{"size":6268,"mtime":1632419619364,"results":"32","hashOfConfig":"30"},{"size":981,"mtime":1632419619363,"results":"33","hashOfConfig":"30"},{"size":437,"mtime":1632288377701,"results":"34","hashOfConfig":"30"},{"size":4210,"mtime":1632284329271,"results":"35","hashOfConfig":"30"},{"size":5137,"mtime":1632419619363,"results":"36","hashOfConfig":"30"},{"size":3217,"mtime":1632419619363,"results":"37","hashOfConfig":"30"},{"size":8277,"mtime":1632421430175,"results":"38","hashOfConfig":"30"},{"size":8262,"mtime":1632338544638,"results":"39","hashOfConfig":"30"},{"size":926,"mtime":1632419619363,"results":"40","hashOfConfig":"30"},{"size":3788,"mtime":1632338544637,"results":"41","hashOfConfig":"30"},{"size":974,"mtime":1632258388300,"results":"42","hashOfConfig":"30"},{"size":4937,"mtime":1632419619363,"results":"43","hashOfConfig":"30"},{"size":358,"mtime":1632197560150,"results":"44","hashOfConfig":"45"},{"size":1160,"mtime":1632288377655,"results":"46","hashOfConfig":"45"},{"size":6268,"mtime":1632419619364,"results":"47","hashOfConfig":"45"},{"size":437,"mtime":1632288377701,"results":"48","hashOfConfig":"45"},{"size":981,"mtime":1632419619363,"results":"49","hashOfConfig":"45"},{"size":4210,"mtime":1632284329271,"results":"50","hashOfConfig":"45"},{"size":3788,"mtime":1632338544637,"results":"51","hashOfConfig":"45"},{"size":5137,"mtime":1632419619363,"results":"52","hashOfConfig":"45"},{"size":4937,"mtime":1632419619363,"results":"53","hashOfConfig":"45"},{"size":974,"mtime":1632258388300,"results":"54","hashOfConfig":"45"},{"size":3217,"mtime":1632419619363,"results":"55","hashOfConfig":"45"},{"size":926,"mtime":1632419619363,"results":"56","hashOfConfig":"45"},{"size":8277,"mtime":1632421430175,"results":"57","hashOfConfig":"45"},{"size":8262,"mtime":1632338544638,"results":"58","hashOfConfig":"45"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1i7rpg0",{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1notw5",{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shellygupta/Desktop/Algorithms/Group/client/src/index.js",[],["118","119"],"/Users/shellygupta/Desktop/Algorithms/Group/client/src/App.js",[],"/Users/shellygupta/Desktop/Algorithms/Group/client/src/views/Main.js",["120","121","122","123"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Container, Button, Form } from \"react-bootstrap\";\nimport ChartPie from \"../components/ChartPie\";\nimport AccordionTable from \"../components/AccordionTable\";\nimport BarChart from \"../components/BarChart\";\nimport { Paper } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport \"../views/AddFood/styles.css\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nfunction Main(props) {\n  const [dailyWeight, setDailyWeight] = useState(0);\n  const [userData, setUserData] = useState();\n  const [weights, setWeights] = useState([]);\n  const [foodData, setFoodData] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const getTodayMeal = () => {\n    let dateofToday = new Date().toISOString().split(\"T\")[0];\n    console.log(dateofToday);\n    console.log(selectedDate);\n    if (selectedDate.toISOString().split(\"T\")[0] !== dateofToday) {\n      dateofToday = selectedDate.toISOString().split(\"T\")[0];\n    }\n    console.log(dateofToday);\n    // console.log(date);\n    axios\n      .get(\"http://localhost:8000/api/meal/\" + dateofToday, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        // console.log(\"this ran\")\n        setFoodData(res.data);\n      })\n      .catch((err) => console.log(err.response));\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/api/users/getOne\", {\n        withCredentials: true,\n      })\n      .then((response) => {\n        setUserData(response.data);\n        setWeights(response.data.weights);\n        getTodayMeal();\n        console.log(\"ran\");\n        setLoaded(true);\n      })\n      .catch((error) => console.log(\"error\", error.response));\n  }, []);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    let newWeights = [...weights, Number(dailyWeight)];\n    setWeights(newWeights);\n    axios\n      .put(\n        \"http://localhost:8000/api/users/update\",\n        { weights: newWeights },\n        { withCredentials: true }\n      )\n      .then((res) => console.log(res.data))\n      .catch((err) => console.log(err.response));\n  };\n\n  return (\n    <div\n      style={{\n        background: \"radial-gradient(circle, #e9e3e3 50%, #e4d882 100%)\",\n      }}\n    >\n      <div id=\"MainbackImage\" style={{}}>\n        <h1\n          style={{\n            fontSize: \"4em\",\n            fontWeight: \"bolder\",\n            padding: \"100px 70px 0px 70px\",\n            width: \"700px\",\n          }}\n        >\n          Fitness starts with rejuvenating yourself.\n        </h1>\n        <p\n          style={{\n            width: \"600px\",\n            padding: \"0px 70px\",\n          }}\n        >\n          Take control of your goals. Track calories, break down ingredients,\n          and log activities with Rejuvenating You.\n        </p>\n\n        {loaded && (\n          <Container style={{ marginTop: \"20px\" }}>\n            <Row className=\"py-5\">\n              <Col md={4}>\n                {console.log(foodData)}\n                <ChartPie\n                  foodData={foodData}\n                  weights={weights}\n                  initialWeight={userData.initialWeight}\n                  activityLevel={userData.activityLevel}\n                  age={userData.age}\n                  height={userData.height}\n                />\n              </Col>\n            </Row>\n          </Container>\n        )}\n      </div>\n      {loaded && (\n        <Container style={{ marginTop: \"0px\" }}>\n          <Row className=\"py-5\">\n            <Col md={4}></Col>\n            <Col md={8} className=\"py-5\">\n              <Paper elevation={24}>\n                <AccordionTable\n                  foodData={foodData}\n                  userData={userData}\n                  setUserData={setUserData}\n                  getTodayMeal={getTodayMeal}\n                />\n              </Paper>\n            </Col>\n            <Row className=\"py-0\">\n              <Col md={8} className=\"py-0\">\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    style={{\n                      backgroundColor: \"\",\n                      paddingTop: \"4px\",\n                      marginLeft: \"10px\",\n                      marginTop: \"0x\",\n                    }}\n                    autoOk\n                    variant=\"inline\"\n                    inputVariant=\"outlined\"\n                    label=\"\"\n                    format=\"MM/dd/yyyy\"\n                    value={selectedDate}\n                    InputAdornmentProps={{ position: \"start\" }}\n                    onChange={(date) => {\n                      handleDateChange(date);\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n                <button\n                  className=\"mainPageButton\"\n                  style={{ height: \"60px\" }}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    getTodayMeal();\n                  }}\n                >\n                  Check Health Data Of Choosen Date\n                </button>\n              </Col>\n            </Row>\n            <Form\n              onSubmit={submitHandler}\n              className=\"d-flex\"\n              style={{ margin: \"80px 0px 0px 0px\", width: \"90%\" }}\n            >\n              <Form.Control\n                type=\"text\"\n                name=\"q\"\n                onChange={(e) => setDailyWeight(e.target.value)}\n                placeholder=\"Input your daily weight\"\n                className=\"sm-3\"\n              ></Form.Control>\n\n              <button\n                className=\"mainPageButton\"\n                // variant=\"btn btn-dark\"\n                style={{ height: \"60px\" }}\n              >\n                Record Weight\n              </button>\n            </Form>\n            <br />\n            <br />\n            <br />\n            <Col md={10}>\n              <BarChart\n                weights={weights}\n                initialWeight={userData.initialWeight}\n              />\n            </Col>\n          </Row>\n        </Container>\n      )}\n    </div>\n  );\n}\n\nexport default Main;\n","/Users/shellygupta/Desktop/Algorithms/Group/client/src/views/AddFood/AddFood.js",[],"/Users/shellygupta/Desktop/Algorithms/Group/client/src/views/LoginRegister.js",[],"/Users/shellygupta/Desktop/Algorithms/Group/client/src/utils/Navbar/Navbar.js",[],"/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/DisplayFood.js",[],"/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/ChartPie.js",[],"/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/AccordionTable.js",["124"],"import React, { useState } from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport \"../App.css\"\nimport axios from \"axios\";\nimport AddCircleSharpIcon from '@material-ui/icons/AddCircleSharp';\n\nconst AccordionTable = (props) => {\n  const { foodData, userData, setUserData, getTodayMeal } = props;\n\n  const incrementFood = (food, mealType) => {\n    console.log(food.food_id._id);\n    axios\n      .put(\n        \"http://localhost:8000/api/user/addtomeal/\" +\n          food.food_id._id +\n          \"/\" +\n          mealType,\n        userData,\n        { withCredentials: true }\n      )\n      .then((res) => {\n        setUserData(res.data);\n        getTodayMeal();\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n      });\n  };\n  return (\n    <>\n      <Accordion style={{paddingLeft:\"20px\"}}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>Breakfast</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Breakfast</TableCell>\n                  <TableCell align=\"center\">Calories</TableCell>\n                  <TableCell align=\"center\">Fat(g)</TableCell>\n                  <TableCell align=\"center\">Carbs(g)</TableCell>\n                  <TableCell align=\"center\">Protein(g)</TableCell>\n                  <TableCell align=\"center\">+</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {foodData &&\n                  foodData.breakfast &&\n                  foodData.breakfast.map((food, index) => {\n                    return (\n                      <TableRow key={\"breakfast\" + index}>\n                        <TableCell>\n                          {food.food_id.name} x {food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {(food.food_id.fat * 9 +\n                            (food.food_id.carb + food.food_id.protein) * 4) *\n                            food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {food.food_id.fat * food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {food.food_id.carb * food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {food.food_id.protein * food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          <AddCircleSharpIcon onClick={() => incrementFood(food, \"breakfast\")} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion style={{paddingLeft:\"20px\"}}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography>Lunch</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Lunch</TableCell>\n                  <TableCell align=\"center\">Calories</TableCell>\n                  <TableCell align=\"center\">Fat(g)</TableCell>\n                  <TableCell align=\"center\">Carbs(g)</TableCell>\n                  <TableCell align=\"center\">Protein(g)</TableCell>\n                  <TableCell align=\"center\">+</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {foodData &&\n                  foodData.lunch &&\n                  foodData.lunch.map((food, index) => {\n                    return (\n                      <TableRow key={\"lunch\" + index}>\n                        <TableCell>\n                          {food.food_id.name} x {food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {(food.food_id.fat * 9 +\n                            (food.food_id.carb + food.food_id.protein) * 4) *\n                            food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {food.food_id.fat * food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {food.food_id.carb * food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {food.food_id.protein * food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                        <AddCircleSharpIcon onClick={() => incrementFood(food, \"lunch\")} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion style={{paddingLeft:\"20px\"}}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography>Dinner</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Lunch</TableCell>\n                  <TableCell align=\"center\">Calories</TableCell>\n                  <TableCell align=\"center\">Fat(g)</TableCell>\n                  <TableCell align=\"center\">Carbs(g)</TableCell>\n                  <TableCell align=\"center\">Protein(g)</TableCell>\n                  <TableCell align=\"center\">+</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {foodData &&\n                  foodData.dinner &&\n                  foodData.dinner.map((food, index) => {\n                    return (\n                      <TableRow key={\"dinner\" + index}>\n                        <TableCell>\n                          {food.food_id.name} x {food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {(food.food_id.fat * 9 +\n                            (food.food_id.carb + food.food_id.protein) * 4) *\n                            food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {food.food_id.fat * food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {food.food_id.carb * food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {food.food_id.protein * food.quantity}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                        <AddCircleSharpIcon  onClick={() => incrementFood(food, \"dinner\")} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n    </>\n  );\n};\n\nexport default AccordionTable;\n","/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/RegisterForm.js",[],"/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/BarChart.js",[],"/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/LoginForm.js",[],"/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/EditFood.js",[],"/Users/shellygupta/Desktop/Algorithms/Group/client/src/components/FoodForm.js",[],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/index.js",[],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/App.js",[],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/views/Main.js",["125","126","127","128"],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/views/LoginRegister.js",[],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/views/AddFood/AddFood.js",[],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/utils/Navbar/Navbar.js",[],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/LoginForm.js",[],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/DisplayFood.js",[],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/FoodForm.js",[],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/EditFood.js",[],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/ChartPie.js",[],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/BarChart.js",[],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/AccordionTable.js",["129"],"/Users/shellygupta/Desktop/Algorithms/Rejuvenating You/client/src/components/RegisterForm.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"138","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"134","severity":1,"message":"139","line":3,"column":31,"nodeType":"136","messageId":"137","endLine":3,"endColumn":37},{"ruleId":"140","severity":1,"message":"141","line":58,"column":6,"nodeType":"142","endLine":58,"endColumn":8,"suggestions":"143"},{"ruleId":"134","severity":1,"message":"144","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"138","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"134","severity":1,"message":"139","line":3,"column":31,"nodeType":"136","messageId":"137","endLine":3,"endColumn":37},{"ruleId":"140","severity":1,"message":"141","line":58,"column":6,"nodeType":"142","endLine":58,"endColumn":8,"suggestions":"145"},{"ruleId":"134","severity":1,"message":"144","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTodayMeal'. Either include it or remove the dependency array.","ArrayExpression",["148"],"'useState' is defined but never used.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"150","fix":"152"},"Update the dependencies array to be: [getTodayMeal]",{"range":"153","text":"154"},{"range":"155","text":"154"},[1917,1919],"[getTodayMeal]",[1917,1919]]